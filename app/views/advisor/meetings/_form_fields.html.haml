= render 'shared/form_errors', object: form.object
%fieldset
  .field
    .convert_radio
      =form.input :agenda, as: :radio_buttons, collection: MeetingAgendaOption.all, :label => 'What is the agenda of this meeting?', include_hidden: false
      .convert_checkbox= render partial: 'shared/other_text', locals: { form: form, field: :other_agenda }
  .field
    %span.columns
      .column.is-one-quarter
        = form.input :start_date, as: :string, label: 'Meeting date', input_html: {type: :date, class: 'input', value: (form.object.try(:start_datetime).try(:to_date) || @date)}, placeholder: "dd/mm/yyyy", required: true

      .column.is-one-quarter
        = form.input :start_time, as: :string, label: 'Meeting time', input_html: {type: :time, class: 'input', value: (form.object.try(:start_datetime)&.to_s(:time) || @time&.strftime("%H:%M"))}, placeholder: "--:--", required: true


  .field
    =form.input :notes, as: :text, :input_html => { :class => "textarea" }

  %p
    Time.zone.now:
    %strong
      = Time.zone.now

  %p
    Time.now:
    %strong
      = Time.now

  %p
    meeting.start_datetime:
    %strong
      = meeting.start_datetime

  %p
    "12:00".to_time:
    %strong
      = "12:00".to_time

  %p
    "2019-06-07".to_date
    %strong
      = "2019-06-07".to_date

  %p
    DateTime.new("2019-06-07".to_date.year, "2019-06-07".to_date.month, "2019-06-07".to_date.day, "12:00".to_time.hour, "12:00".to_time.min, "12:00".to_time.sec, "12:00".to_time.zone):
    %strong
      = DateTime.new("2019-06-07".to_date.year, "2019-06-07".to_date.month, "2019-06-07".to_date.day, "12:00".to_time.hour, "12:00".to_time.min, "12:00".to_time.sec, "12:00".to_time.zone)

  %p
    DateTime.new("2019-06-07".to_date.year, "2019-06-07".to_date.month, "2019-06-07".to_date.day, "12:00".to_time.hour, "12:00".to_time.min, "12:00".to_time.sec):
    %strong
      = DateTime.new("2019-06-07".to_date.year, "2019-06-07".to_date.month, "2019-06-07".to_date.day, "12:00".to_time.hour, "12:00".to_time.min, "12:00".to_time.sec)

  %p
    "12:00".to_time.localtime
    %strong
      = "12:00".to_time.localtime

  %p
    Preserve time zones:
    = ActiveSupport.to_time_preserves_timezone

  %p
    DateTime.new("2019-06-07".to_date.year, "2019-06-07".to_date.month, "2019-06-07".to_date.day, "12:00".to_time.hour, "12:00".to_time.min, "12:00".to_time.sec).in_time_zone:
    %strong
      = DateTime.new("2019-06-07".to_date.year, "2019-06-07".to_date.month, "2019-06-07".to_date.day, "12:00".to_time.hour, "12:00".to_time.min, "12:00".to_time.sec).in_time_zone

  %p
    DateTime.new("2019-06-07".to_date.year, "2019-06-07".to_date.month, "2019-06-07".to_date.day, "12:00".to_time.hour, "12:00".to_time.min, "12:00".to_time.sec, Time.zone.name):
    %strong
      = DateTime.new("2019-06-07".to_date.year, "2019-06-07".to_date.month, "2019-06-07".to_date.day, "12:00".to_time.hour, "12:00".to_time.min, "12:00".to_time.sec, Time.zone.name)

  %p
    DateTime.new("2019-06-07".to_date.year, "2019-06-07".to_date.month, "2019-06-07".to_date.day, "12:00".to_time.hour, "12:00".to_time.min, "12:00".to_time.sec, Time.zone.name).in_time_zone:
    %strong
      = DateTime.new("2019-06-07".to_date.year, "2019-06-07".to_date.month, "2019-06-07".to_date.day, "12:00".to_time.hour, "12:00".to_time.min, "12:00".to_time.sec, Time.zone.name).in_time_zone

  - if meeting.start_datetime && meeting.start_datetime < Time.zone.now
    .field
      = form.input :client_attended, as: :radio_buttons, collection: [['Yes', true], ['No', false]], label: 'Did the client attend this meeting?',  wrapper_html: { class: "convert_radio has_child" }

  .field
    %span.select.advisor
      =form.input :advisor_id, as: :select, collection: Advisor.all, include_blank: false, input_wrapper_html: {class: 'select'}
  = form.input :client_id, as: :hidden
