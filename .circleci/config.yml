version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@3.0.0
  aws-cli: circleci/aws-cli@0.1.9
  aws_assume_role: lbh-hackit/aws_assume_role@0.1.0

executors:
  docker-python:
    docker:
      - image: circleci/python:3.8
  docker-terraform:
    docker:
      - image: hashicorp/terraform:1.5.7

references:
  workspace_root: &workspace_root "~"
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

commands:
  assume-role-and-persist-workspace:
    description: "Assumes deployment role and persists credentials across jobs"
    parameters:
      aws-account:
        type: string
    steps:
      - checkout
      - aws_assume_role/assume_role:
          account: <<parameters.aws-account>>
          profile_name: default
          role: "LBH_Circle_CI_Deployment_Role"
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .aws

  preview-terraform:
    description: "Previews terraform configuration changes"
    parameters:
      environment:
        type: string
    steps:
      - *attach_workspace
      - checkout
      - run:
          command: |
            cd ./terraform/<<parameters.environment>>/
            terraform get -update=true
            terraform init
            terraform plan
          name: preview terraform plan

jobs:
  build-and-test:
    working_directory: ~/LBHackney-IT/ways-into-work
    machine:
      image: ubuntu-2004:2023.10.1
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "Build"
          command:
            docker-compose build
      - run:
          name: "Run tests"
          command: docker-compose run -e "RAILS_ENV=test" --rm app rspec
  assume-role-development:
    executor: docker-python
    steps:
      - assume-role-and-persist-workspace:
          aws-account: $AWS_ACCOUNT_DEVELOPMENT

workflows:
  version: 2
  check:
    jobs:
      - build-and-test